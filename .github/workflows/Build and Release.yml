name: Build and Patch Spotify IPA

on:
  workflow_dispatch:
    inputs:
      SPOTURL:
        description: 'Direct URL to Spotify .ipa'
        required: true
      CHANGEVERSION:
        description: 'SpotveeC Version Number'
        required: false
      USEACTIONSEEVEE:
        description: 'Get EeveeSpotify from latest EeveeSpotify build action'
        required: true
        default: false
        type: boolean
      EEVEEVERSION:
        description: 'EeveeSpotify Version'
        required: false
      EEVEEREPO:
        description: 'Override the repo for EeveeSpotify'
        required: false

env:
  SWIFTPROTOBUF_VERSION: "1.29.0"
  THEOS: ${{ github.workspace }}/theos

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up variables
        run: |
          echo "EEVEEVERSION=${{ github.event.inputs.EEVEEVERSION }}" >> $GITHUB_ENV
          echo "CHANGEVERSION=${{ github.event.inputs.CHANGEVERSION }}" >> $GITHUB_ENV
          echo "SPOTURL=${{ github.event.inputs.SPOTURL }}" >> $GITHUB_ENV
          echo "VT_ENABLED=${{ secrets.VIRUSTOTALKEY != '' }}" >> $GITHUB_ENV
          echo "CATBOXHASH_ENABLED=${{ secrets.CATBOXHASH != '' }}" >> $GITHUB_ENV

      - name: Set EeveeSpotify Repo
        run: |
          if [ "${{ github.event.inputs.EEVEEREPO }}" != "" ]; then
            EEVEEREPO=$(echo "${{ github.event.inputs.EEVEEREPO }}" | sed -E 's|https://github.com/([^/]+)/([^/]+)|\1/\2|' | sed 's|^https://github.com/||')
          else
            EEVEEREPO="whoeevee/EeveeSpotifyReborn"
          fi
          echo "EEVEEREPO=$EEVEEREPO" >> $GITHUB_ENV

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Cyan
        run: pipx install --force https://github.com/SpotCompiled/pyzule-rw/archive/main.zip

      - name: Set EEVEETAG
        run: |
          if [ "${{ env.EEVEEVERSION }}" == "" ]; then
            EEVEETAG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/releases/latest | jq -r .tag_name)
          else
            EEVEEVERSION="${{ env.EEVEEVERSION }}"
            tags=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/tags | jq -r '.[].name')
            for tag in $tags; do
              if [[ $tag == *"$EEVEEVERSION"* ]]; then
                EEVEETAG=$tag
                break
              fi
            done
            if [ -z "$EEVEETAG" ]; then
              echo "No matching tag found for EEVEEVERSION=$EEVEEVERSION"
              exit 1
            fi
          fi
          echo "EEVEETAG=$EEVEETAG" >> $GITHUB_ENV

      - name: Create Build Components folder
        run: mkdir -p "Build Components"

      # Download Spotify IPA
      - name: Download Spotify IPA
        run: |
          echo "Downloading From: ${{ github.event.inputs.SPOTURL }}"
          curl -LJO "${{ github.event.inputs.SPOTURL }}"
          downloaded_file=$(ls -t | head -n1)
          mv "$downloaded_file" "Build Components/"
          echo "spotifypath=Build Components/$downloaded_file" >> $GITHUB_ENV

      # Download EeveeSpotify DEB
      - name: Download EeveeSpotify .deb
        if: ${{ github.event.inputs.USEACTIONSEEVEE == 'false' }}
        run: |
          eevee_asset=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/releases/tags/${{ env.EEVEETAG }} | jq -r '.assets[] | select(.name | startswith("com.eevee.spotify") and endswith("iphoneos-arm64.deb")).browser_download_url')
          curl -LJO "$eevee_asset"
          downloaded_file=$(ls -t | head -n1)
          mv "$downloaded_file" "Build Components/"
          echo "eevee-arm64=Build Components/$downloaded_file" >> $GITHUB_ENV

      - name: Download EeveeSpotify from Action Artifacts
        if: ${{ github.event.inputs.USEACTIONSEEVEE == 'true' }}
        run: |
          workflow_run_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ env.EEVEEREPO }}/actions/workflows/build-swift.yml/runs?status=success&per_page=1" | jq -r '.workflow_runs[0].id')
          eevee_asset=$(curl -sL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/actions/runs/$workflow_run_id/artifacts | jq -r '.artifacts[0].archive_download_url')
          curl -LJ -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$eevee_asset" -o "eeveespotfiyactionsasset.zip"
          unzip -q "eeveespotfiyactionsasset.zip" -d extracted_files
          downloaded_file=$(find extracted_files -type f -name "*.deb" -print -quit)
          mv "$downloaded_file" "Build Components/"
          rm -rf extracted_files
          echo "eevee-arm64=Build Components/$(basename "$downloaded_file")" >> $GITHUB_ENV

      # Download SwiftProtobuf & OpenSpotifySafariExtension
      - name: Download SwiftProtobuf
        run: |
          wget https://github.com/whoeevee/swift-protobuf/releases/download/${{ env.SWIFTPROTOBUF_VERSION }}/org.swift.protobuf.swiftprotobuf_${{ env.SWIFTPROTOBUF_VERSION }}_iphoneos-arm.deb
          wget https://github.com/whoeevee/swift-protobuf/releases/download/${{ env.SWIFTPROTOBUF_VERSION }}/org.swift.protobuf.swiftprotobuf_${{ env.SWIFTPROTOBUF_VERSION }}_iphoneos-arm64.deb
          echo "SWIFTPROTOBUF_ROOTFUL=org.swift.protobuf.swiftprotobuf_${{ env.SWIFTPROTOBUF_VERSION }}_iphoneos-arm.deb" >> $GITHUB_ENV
          echo "SWIFTPROTOBUF_ROOTLESS=org.swift.protobuf.swiftprotobuf_${{ env.SWIFTPROTOBUF_VERSION }}_iphoneos-arm64.deb" >> $GITHUB_ENV

      - name: Download OpenSpotifySafariExtension
        run: |
          git clone https://github.com/BillyCurtis/OpenSpotifySafariExtension
          echo "OPENSPOTIFYSAFARIEXTENSION=OpenSpotifySafariExtension/OpenSpotifySafariExtension.appex" >> $GITHUB_ENV

      # Setup patching tools
      - name: Setup insert-dylib
        run: |
          git clone https://github.com/Tyilo/insert_dylib.git
          xcrun clang -x c -arch arm64 ./insert_dylib/insert_dylib/main.c -I/usr/include/ -o insert-dylib
          sudo mv insert-dylib /usr/local/bin/
          sudo chmod +x /usr/local/bin/insert-dylib

      - name: Setup ivinject
        run: |
          git clone https://github.com/whoeevee/ivinject.git
          cp -r ./ivinject/KnownFrameworks ~/.ivinject
          wget https://github.com/whoeevee/ivinject/releases/download/first/ivinject-arm64
          sudo mv ivinject-arm64 /usr/local/bin/
          sudo chmod +x /usr/local/bin/ivinject-arm64

      - name: Setup ipapatch
        run: |
          wget https://github.com/asdfzxcvbn/ipapatch/releases/download/v2.1.0/ipapatch.macos-arm64
          sudo mv ipapatch.macos-arm64 /usr/local/bin/ipapatch
          sudo chmod +x /usr/local/bin/ipapatch

      # Patch Spotify IPA with Cyan
      - name: Patch Spotify IPA with Cyan
        run: |
          cyan patch \
            -i "${{ env.spotifypath }}" \
            -f "${{ env.eevee-arm64 }}" \
            -o "Build Components/SpotifyPatched.ipa"
          echo "patchedspotify=Build Components/SpotifyPatched.ipa" >> $GITHUB_ENV

      # Patch IPA with ivinject & ipapatch workflow
      - name: Create EeveeSpotify Package
        run: |
          ivinject-arm64 Build\ Components/SpotifyPatched.ipa EeveeSpotify.ipa \
            -i "${{ env.eevee-arm64 }}" "${{ env.SWIFTPROTOBUF_ROOTFUL }}" "${{ env.OPENSPOTIFYSAFARIEXTENSION }}" \
            -s - -d --level Optimal

      - name: Create Patched Package
        run: ipapatch -input EeveeSpotify.ipa -output EeveeSpotify-patched.ipa

      # Upload to GitHub Releases
      - name: Create Draft Release
        uses: softprops/action-gh-release@v2.0.1
        with:
          tag_name: eevee-${{ github.run_number }}
          name: EeveeSpotify Build #${{ github.run_number }}
          files: |
            Build Components/SpotifyPatched.ipa
            EeveeSpotify.ipa 
            EeveeSpotify-patched.ipa
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
