name: Build and Release

on:
  workflow_dispatch:
    inputs:
      SPOTURL:
        description: 'Direct URL to Spotify .ipa'
        required: true
      CHANGEVERSION:
        description: 'SpotveeC Version Number'
        required: false
      USEACTIONSEEVEE:
        description: 'Get EeveeSpotify from latest EeveeSpotify build action'
        required: true
        default: false
        type: boolean
      EEVEEVERSION:
        description: 'EeveeSpotify Version'
        required: false
      EEVEEREPO:
        description: 'Override the repo for EeveeSpotify'
        required: false

jobs:
  build:
    runs-on: macos-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up environment variables
      id: setup
      run: |
        echo "EEVEEVERSION=${{ github.event.inputs.EEVEEVERSION }}" >> $GITHUB_ENV
        echo "CHANGEVERSION=${{ github.event.inputs.CHANGEVERSION }}" >> $GITHUB_ENV
        echo "SPOTURL=${{ github.event.inputs.SPOTURL }}" >> $GITHUB_ENV
        echo "VT_ENABLED=${{ secrets.VIRUSTOTALKEY != '' }}" >> $GITHUB_ENV
        echo "CATBOXHASH_ENABLED=${{ secrets.CATBOXHASH != '' }}" >> $GITHUB_ENV
        echo "WORKFLOWURL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

    - name: Set EeveeSpotify repository
      run: |
        if [ "${{ github.event.inputs.EEVEEREPO }}" != "" ]; then
          EEVEEREPO=$(echo "${{ github.event.inputs.EEVEEREPO }}" | sed -E 's|https://github.com/([^/]+)/([^/]+)|\1/\2|' | sed 's|^https://github.com/||')
        else
          EEVEEREPO="whoeevee/EeveeSpotifyReborn"
        fi
        echo "EEVEEREPO=$EEVEEREPO" >> $GITHUB_ENV

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install Cyan
      run: pipx install --force https://github.com/SpotCompiled/pyzule-rw/archive/main.zip

    - name: Set Eevee tag
      id: set-eevee-tag
      run: |
        if [ -z "${{ env.EEVEEVERSION }}" ]; then
          EEVEETAG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/releases/latest | jq -r .tag_name)
        else
          EEVEEVERSION="${{ env.EEVEEVERSION }}"
          tags=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/tags | jq -r '.[].name')
          for tag in $tags; do
            if [[ $tag == *"$EEVEEVERSION"* ]]; then
              EEVEETAG=$tag
              break
            fi
          done
          if [ -z "$EEVEETAG" ]; then
            echo "No matching tag found for EEVEEVERSION=$EEVEEVERSION"
            exit 1
          fi
        fi
        echo "EEVEETAG=$EEVEETAG" >> $GITHUB_ENV
        echo "Using Eevee tag: $EEVEETAG"

    - name: Create Build Components folder
      run: mkdir -p "Build Components"

    - name: Download Spotify IPA
      run: |
        echo "Downloading Spotify from: ${{ github.event.inputs.SPOTURL }}"
        curl -LJO "${{ github.event.inputs.SPOTURL }}"
        downloaded_file=$(ls -t | head -n1)
        mv "$downloaded_file" "Build Components/"
        echo "spotifypath=Build Components/$downloaded_file" >> $GITHUB_ENV

    - name: Upload Spotify IPA to VirusTotal
      if: ${{ env.VT_ENABLED == 'true' }}
      uses: crazy-max/ghaction-virustotal@v4
      id: vt-spotify
      with:
        files: "${{ env.spotifypath }}"
        vt_api_key: ${{ secrets.VIRUSTOTALKEY }}

    - name: Set VirusTotal Spotify URL
      if: ${{ env.VT_ENABLED == 'true' }}
      run: echo "VTVANILLASPOTIFY=${{ steps.vt-spotify.outputs.analysis }}" >> $GITHUB_ENV

    - name: Download and process Orion
      run: |
        curl -sSL https://repo.chariz.com/Packages -o Packages
        ORIONVERSION=$(awk 'BEGIN {RS="";FS="\n";highest=""} $1~/^Package: dev.theos.orion14$/ && $0~/Architecture: iphoneos-arm64/{for(i=1;i<=NF;i++){if($i~/^Version: /){v=$2; if(v>highest){highest=v}}}} END{print highest}' Packages)
        FILENAME=$(awk 'BEGIN{RS="";FS="\n";highest="";fname=""} $1~/^Package: dev.theos.orion14$/ && $0~/Architecture: iphoneos-arm64/{for(i=1;i<=NF;i++){if($i~/^Version: /){v=$2; if(v>highest){highest=v}} else if($i~/^Filename: /){fname=$2}}} END{print fname}' Packages)
        SHA256=$(awk 'BEGIN{RS="";FS="\n";sha="noSHA";v=""} $1~/^Package: dev.theos.orion14$/ && $0~/Architecture: iphoneos-arm64/{for(i=1;i<=NF;i++){if($i~/^Version:/){cv=$2;if(cv>v){v=cv}} else if($i~/^SHA256:/){sha=$2}}} END{print sha}' Packages)
        MD5=$(awk 'BEGIN{RS="";FS="\n";md5="noMD5";v=""} $1~/^Package: dev.theos.orion14$/ && $0~/Architecture: iphoneos-arm64/{for(i=1;i<=NF;i++){if($i~/^Version:/){cv=$2;if(cv>v){v=cv}} else if($i~/^MD5Sum:/){md5=$2}}} END{print md5}' Packages)
        curl -LJO "https://repo.chariz.com/$FILENAME"
        downloaded_file=$(ls -t | head -n1)
        mv "$downloaded_file" "Build Components/"
        orion="Build Components/$downloaded_file"
        echo "orion=$orion" >> $GITHUB_ENV
        echo "ORIONVERSION=$ORIONVERSION" >> $GITHUB_ENV

        if [ "$SHA256" != "noSHA" ]; then
          calc_sha=$(shasum -a 256 "$orion" | awk '{print $1}')
          [ "$calc_sha" != "$SHA256" ] && echo "SHA256 mismatch" && exit 1
        elif [ "$MD5" != "noMD5" ]; then
          calc_md5=$(md5 -q "$orion")
          [ "$calc_md5" != "$MD5" ] && echo "MD5 mismatch" && exit 1
        else
          echo "No valid hash found"; exit 1
        fi
        rm -f Packages

    - name: Upload Orion to VirusTotal
      if: ${{ env.VT_ENABLED == 'true' }}
      uses: crazy-max/ghaction-virustotal@v4
      id: vt-orion
      with:
        files: "${{ env.orion }}"
        vt_api_key: ${{ secrets.VIRUSTOTALKEY }}

    - name: Set VirusTotal Orion URL
      if: ${{ env.VT_ENABLED == 'true' }}
      run: echo "VTORION=${{ steps.vt-orion.outputs.analysis }}" >> $GITHUB_ENV

    - name: Download EeveeSpotify .deb
      if: ${{ github.event.inputs.USEACTIONSEEVEE == 'false' }}
      run: |
        eevee_asset=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/releases/tags/${{ env.EEVEETAG }} | jq -r '.assets[] | select(.name | startswith("com.eevee.spotify") and endswith("
