name: Build and Release

on:
  workflow_dispatch:
    inputs:
      SPOTURL:
        description: 'Direct URL to Spotify .ipa'
        required: true
      CHANGEVERSION:
        description: 'SpotveeC Version Number'
        required: false
      USEACTIONSEEVEE:
        description: 'Get EeveeSpotify from latest EeveeSpotify build action'
        required: true
        default: false
        type: boolean
      EEVEEVERSION:
        description: 'EeveeSpotify Version (tag to fetch from release)'
        required: false
        default: "6.1.5"
      EEVEEREPO:
        description: 'Override the repo for EeveeSpotify'
        required: false
        default: "whoeevee/EeveeSpotifyReborn"

jobs:
  build:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up variables
      run: |
        echo "EEVEEVERSION=${{ github.event.inputs.EEVEEVERSION }}" >> $GITHUB_ENV
        echo "CHANGEVERSION=${{ github.event.inputs.CHANGEVERSION }}" >> $GITHUB_ENV
        echo "SPOTURL=${{ github.event.inputs.SPOTURL }}" >> $GITHUB_ENV
        echo "EEVEEREPO=${{ github.event.inputs.EEVEEREPO }}" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install Cyan
      run: pipx install --force https://github.com/SpotCompiled/pyzule-rw/archive/main.zip

    - name: Download Spotify IPA
      run: |
        echo "Downloading From: ${{ env.SPOTURL }}"
        curl -LJO "${{ env.SPOTURL }}"
        downloaded_file=$(ls -t | head -n1)
        mkdir -p "Build Components"
        mv "$downloaded_file" "Build Components/"
        echo "spotifypath=Build Components/$downloaded_file" >> $GITHUB_ENV

    - name: Download EeveeSpotify .deb
      run: |
        echo "Fetching EeveeSpotify from $EEVEEREPO at tag $EEVEEVERSION"
        eevee_asset=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ env.EEVEEREPO }}/releases/tags/${{ env.EEVEEVERSION }} \
          | jq -r '.assets[] | select(.name | startswith("com.eevee.spotify") and endswith("iphoneos-arm64.deb")).browser_download_url')

        if [ -z "$eevee_asset" ] || [ "$eevee_asset" == "null" ]; then
          echo "❌ No matching EeveeSpotify asset found in release $EEVEEVERSION"
          exit 1
        fi

        echo "Downloading From: $eevee_asset"
        curl -LJO "$eevee_asset"
        downloaded_file=$(ls -t com.eevee.spotify*arm64.deb | head -n1)
        mkdir -p "Build Components"
        mv "$downloaded_file" "Build Components/"
        echo "eevee-arm64=Build Components/$downloaded_file" >> $GITHUB_ENV

    - name: Patch Spotify IPA
      run: |
        mkdir -p "Build Output"
        Cyan -i "${{ env.spotifypath }}" \
             -o "Build Output/Spotify-Patched.ipa" \
             -f "${{ env.eevee-arm64 }}" -u -w
        echo "patchedspotify=Build Output/Spotify-Patched.ipa" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.patchedspotify }}
        tag_name: "v${{ github.run_number }}"
        name: "Spotify Patched v${{ github.run_number }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
