name: Build and Release

on:
  workflow_dispatch:
    inputs:
      SPOTURL:
        description: "Spotify IPA URL"
        required: true
        type: string
      CHANGEVERSION:
        description: "Custom version number (optional)"
        required: false
        type: string
      USEACTIONSEEVEE:
        description: "Use EeveeSpotify build action?"
        required: false
        type: boolean
        default: true
      EEVEEVERSION:
        description: "Specific EeveeSpotify version (optional)"
        required: false
        type: string
      EEVEEREPO:
        description: "EeveeSpotify repo (optional)"
        required: false
        type: string
        default: "whoeevee/EeveeSpotifyReborn"

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        brew install jq
        python3 -m pip install --upgrade pip
        pipx install Cyan || pipx upgrade Cyan

    - name: Set variables
      id: vars
      run: |
        SPOTURL="${{ github.event.inputs.SPOTURL }}"
        CHANGEVERSION="${{ github.event.inputs.CHANGEVERSION }}"
        USEACTIONSEEVEE="${{ github.event.inputs.USEACTIONSEEVEE }}"
        EEVEEVERSION="${{ github.event.inputs.EEVEEVERSION }}"
        EEVEEREPO="${{ github.event.inputs.EEVEEREPO }}"
        echo "SPOTURL=$SPOTURL" >> $GITHUB_ENV
        echo "CHANGEVERSION=$CHANGEVERSION" >> $GITHUB_ENV
        echo "USEACTIONSEEVEE=$USEACTIONSEEVEE" >> $GITHUB_ENV
        echo "EEVEEVERSION=$EEVEEVERSION" >> $GITHUB_ENV
        echo "EEVEEREPO=$EEVEEREPO" >> $GITHUB_ENV

    - name: Download Spotify IPA
      run: |
        echo "Downloading From: ${{ github.event.inputs.SPOTURL }}"
        # Download the file using curl
        curl -LJO "${{ github.event.inputs.SPOTURL }}"
        downloaded_file=$(ls -t | head -n1)
        mkdir -p "Build Components"
        mv "$downloaded_file" "Build Components/"
        echo "spotifypath=Build Components/$downloaded_file" >> $GITHUB_ENV
      env:
        SPOTURL: ${{ github.event.inputs.SPOTURL }}

    - name: Decrypt IPA (if needed)
      run: |
        # Placeholder: Add your decryption commands here if required
        echo "Decrypt step skipped"

    - name: Build EeveeSpotify (if enabled)
      if: ${{ env.USEACTIONSEEVEE == 'true' }}
      run: |
        git clone https://github.com/${EEVEEREPO}.git eevee
        cd eevee
        if [ -n "$EEVEEVERSION" ]; then
          git checkout $EEVEEVERSION
        fi
        # Run Eevee build command
        echo "Building EeveeSpotify..."
        # Add your actual build command here

    - name: Update version
      run: |
        if [ -z "$CHANGEVERSION" ]; then
          NEWVER=$(date +'%Y.%m.%d.%H%M')
        else
          NEWVER=$CHANGEVERSION
        fi
        echo "New version: $NEWVER"
        echo "VERSION=$NEWVER" >> $GITHUB_ENV

    - name: Upload IPA to Catbox (optional)
      if: secrets.CATBOXHASH != ''
      run: |
        curl -F "reqtype=fileupload" -F "userhash=$CATBOXHASH" -F "file=@${{ env.spotifypath }}" https://catbox.moe/user/api.php

    - name: VirusTotal Scan (optional)
      if: secrets.VIRUSTOTALKEY != ''
      run: |
        curl -s -X POST "https://www.virustotal.com/api/v3/files" \
          -H "x-apikey: $VIRUSTOTALKEY" \
          -F "file=@${{ env.spotifypath }}"

    - name: Complete
      run: echo "Build and release workflow completed successfully."
