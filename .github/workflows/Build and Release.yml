name: Build and Release

on:
  workflow_dispatch:
    inputs:
      SPOTURL:
        description: 'Direct URL to Spotify .ipa'
        required: true
      CHANGEVERSION:
        description: 'SpotveeC Version Number'
        required: false
      USEACTIONSEEVEE:
        description: 'Get EeveeSpotify from latest EeveeSpotify build action'
        required: true
        default: false
        type: boolean
      EEVEEVERSION:
        description: 'EeveeSpotify Version'
        required: false
      EEVEEREPO:
        description: 'Override the repo for EeveeSpotify'
        required: false

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment variables
        run: |
          echo "EEVEEVERSION=${{ github.event.inputs.EEVEEVERSION }}" >> $GITHUB_ENV
          echo "CHANGEVERSION=${{ github.event.inputs.CHANGEVERSION }}" >> $GITHUB_ENV
          echo "SPOTURL=${{ github.event.inputs.SPOTURL }}" >> $GITHUB_ENV
          echo "VT_ENABLED=${{ secrets.VIRUSTOTALKEY != '' }}" >> $GITHUB_ENV
          echo "CATBOXHASH_ENABLED=${{ secrets.CATBOXHASH != '' }}" >> $GITHUB_ENV
          echo "WORKFLOWURL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV
          
      - name: Set EeveeSpotify Repo
        run: |
          if [ "${{ github.event.inputs.EEVEEREPO }}" != "" ]; then
            EEVEEREPO=$(echo "${{ github.event.inputs.EEVEEREPO }}" | sed -E 's|https://github.com/([^/]+)/([^/]+)|\1/\2|' )
          else
            EEVEEREPO="whoeevee/EeveeSpotifyReborn"
          fi
          echo "EEVEEREPO=$EEVEEREPO" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Cyan
        run: pipx install --force https://github.com/SpotCompiled/pyzule-rw/archive/main.zip

      - name: Determine EeveeSpotify Tag
        run: |
          if [ -z "${{ env.EEVEEVERSION }}" ]; then
            echo "Fetching latest EeveeSpotify release tag..."
            EEVEETAG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/releases/latest | jq -r .tag_name)
          else
            tags=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/tags | jq -r '.[].name')
            for tag in $tags; do
              if [[ $tag == *"${{ env.EEVEEVERSION }}"* ]]; then
                EEVEETAG=$tag
                break
              fi
            done
            if [ -z "$EEVEETAG" ]; then
              echo "No matching tag found for EEVEEVERSION=${{ env.EEVEEVERSION }}"
              exit 1
            fi
          fi
          echo "EEVEETAG=$EEVEETAG" >> $GITHUB_ENV

      - name: Create Build Components folder
        run: mkdir -p "Build Components"

      - name: Download Spotify IPA
        run: |
          curl -LJO "${{ env.SPOTURL }}"
          downloaded_file=$(ls -t | head -n1)
          mv "$downloaded_file" "Build Components/"
          echo "spotifypath=Build Components/$downloaded_file" >> $GITHUB_ENV

      - name: Download Orion .deb and check hash
        run: |
          curl -sSL https://repo.chariz.com/Packages -o Packages
          ORIONFILE=$(awk 'BEGIN{RS="";FS="\n"} $1~/^Package: dev.theos.orion14$/ && $0~/Architecture: iphoneos-arm64/{for(i=1;i<=NF;i++){if($i~/^Filename: /){split($i,a," ");fname=a[2]}}} END{print fname}' Packages)
          curl -LJO "https://repo.chariz.com/$ORIONFILE"
          downloaded_file=$(ls -t | head -n1)
          mv "$downloaded_file" "Build Components/"
          echo "orion=Build Components/$downloaded_file" >> $GITHUB_ENV
          rm -f Packages

      - name: Download EeveeSpotify
        run: |
          if [ "${{ github.event.inputs.USEACTIONSEEVEE }}" == "true" ]; then
            workflow_run_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ env.EEVEEREPO }}/actions/workflows/build-swift.yml/runs?status=success&per_page=1" | jq -r '.workflow_runs[0].id')
            eevee_asset=$(curl -sL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/actions/runs/$workflow_run_id/artifacts | jq -r '.artifacts[0].archive_download_url')
            curl -LJ -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$eevee_asset" -o "eeveespotfiyactionsasset.zip"
            unzip -q "eeveespotfiyactionsasset.zip" -d extracted_files
            downloaded_file=$(find extracted_files -type f -name "*.deb" -print -quit)
            mv "$downloaded_file" "Build Components/"
            rm -rf extracted_files
          else
            eevee_asset=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/releases/tags/${{ env.EEVEETAG }} | jq -r '.assets[] | select(.name | startswith("com.eevee.spotify") and endswith("iphoneos-arm64.deb")).browser_download_url')
            curl -LJO "$eevee_asset"
            downloaded_file=$(ls -t | head -n1)
            mv "$downloaded_file" "Build Components/"
          fi
          echo "eevee-arm64=Build Components/$downloaded_file" >> $GITHUB_ENV

      - name: Run Cyan Patch
        run: |
          Cyan -i "${{ env.spotifypath }}" -o "Build Components/SpotveeC.v${{ env.CHANGEVERSION }}.ipa" -v ${{ env.CHANGEVERSION }} -f "${{ env.orion }}" "${{ env.eevee-arm64 }}" -u -w
          echo "patchedspotify=Build Components/SpotveeC.v${{ env.CHANGEVERSION }}.ipa" >> $GITHUB_ENV

      - name: Upload to Catbox
        run: |
          if [ "${{ env.CATBOXHASH_ENABLED }}" == "true" ]; then
            RELEASEURL=$(curl -F "reqtype=fileupload" -F "userhash=${{ secrets.CATBOXHASH }}" -F "fileToUpload=@${{ env.patchedspotify }}" https://catbox.moe/user/api.php)
          else
            RELEASEURL=$(curl -F "reqtype=fileupload" -F "fileToUpload=@${{ env.patchedspotify }}" https://catbox.moe/user/api.php)
          fi
          echo "RELEASEURL=$RELEASEURL" >> $GITHUB_ENV

      - name: Create Draft Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.CHANGEVERSION }}"
          name: "SpotveeC v${{ env.CHANGEVERSION }}"
          draft: true
          body: "Download: ${{ env.RELEASEURL }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
