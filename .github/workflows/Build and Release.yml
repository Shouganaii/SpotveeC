name: Build and Release

on:
  workflow_dispatch:
    inputs:
      SPOTURL:
        description: 'Direct URL to Spotify .ipa'
        required: true
      CHANGEVERSION:
        description: 'SpotveeC Version Number'
        required: false
      USEACTIONSEEVEE:
        description: 'Get EeveeSpotify from latest EeveeSpotfiy build action'
        required: true
        default: false
        type: boolean
      EEVEEVERSION:
        description: 'EeveeSpotify Version'
        required: false
      EEVEEREPO:
        description: 'Override the repo for EeveeSpotify'
        required: false

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up variables
        run: |
          echo "EEVEEVERSION=${{ github.event.inputs.EEVEEVERSION }}" >> $GITHUB_ENV
          echo "CHANGEVERSION=${{ github.event.inputs.CHANGEVERSION }}" >> $GITHUB_ENV
          echo "SPOTURL=${{ github.event.inputs.SPOTURL }}" >> $GITHUB_ENV
          echo "VT_ENABLED=${{ secrets.VIRUSTOTALKEY != '' }}" >> $GITHUB_ENV
          echo "CATBOXHASH_ENABLED=${{ secrets.CATBOXHASH != '' }}" >> $GITHUB_ENV
          echo "WORKFLOWURL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: Set EeveeSpotify Repo
        run: |
          if [[ "${{ github.event.inputs.EEVEEREPO }}" != "" ]]; then
            EEVEEREPO=$(echo "${{ github.event.inputs.EEVEEREPO }}" | sed -E 's|https://github.com/([^/]+)/([^/]+)|\1/\2|')
          else
            EEVEEREPO="whoeevee/EeveeSpotifyReborn"
          fi
          echo "EEVEEREPO=$EEVEEREPO" >> $GITHUB_ENV

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Cyan
        run: pipx install --force https://github.com/SpotCompiled/pyzule-rw/archive/main.zip

      - name: Set EEVEETAG
        run: |
          if [[ "${{ github.event.inputs.EEVEEVERSION }}" == "" ]]; then
            EEVEETAG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/releases/latest | jq -r .tag_name)
          else
            EEVEEVERSION="${{ github.event.inputs.EEVEEVERSION }}"
            EEVEETAG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/tags | jq -r --arg v "$EEVEEVERSION" '.[] | select(.name | contains($v)) | .name' | head -n1)
          fi
          if [[ -z "$EEVEETAG" ]]; then
            echo "No matching tag found!"
            exit 1
          fi
          echo "EEVEETAG=$EEVEETAG" >> $GITHUB_ENV

      - name: Create Build Components folder
        run: mkdir -p "Build Components"

      - name: Download Spotify IPA
        run: |
          curl -LJO "${{ github.event.inputs.SPOTURL }}"
          downloaded_file=$(ls -t *.ipa | head -n1)
          mv "$downloaded_file" "Build Components/"
          echo "spotifypath=Build Components/$downloaded_file" >> $GITHUB_ENV

      # ... keep your Orion, EeveeSpotify, SwiftProtobuf download and VirusTotal steps ...

      - name: Run Cyan Patch
        run: |
          Cyan -i "${{ env.spotifypath }}" \
               -o "${{ env.componentspath }}/SpotveeC.v${{ env.CHANGEVERSION }}_v${{ env.VANILLASPOTIFYVERSION }}.ipa" \
               -v ${{ env.CHANGEVERSION }} \
               -f "${{ env.orion }}" "${{ env.swiftprotobuf }}" "${{ env.eevee-arm64 }}" \
               -u -w
          echo "patchedspotify=${{ env.componentspath }}/SpotveeC.v${{ env.CHANGEVERSION }}_v${{ env.VANILLASPOTIFYVERSION }}.ipa" >> $GITHUB_ENV
