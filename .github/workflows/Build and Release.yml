name: Build and Release

on:
  workflow_dispatch:
    inputs:
      SPOTURL:
        description: 'Direct URL to Spotify .ipa'
        required: true
      CHANGEVERSION:
        description: 'SpotveeC Version Number'
        required: false
      USEACTIONSEEVEE:
        description: 'Get EeveeSpotify from latest EeveeSpotfiy build action'
        required: true
        default: false
        type: boolean
      EEVEEVERSION:
        description: 'EeveeSpotify Version'
        required: false
      EEVEEREPO:
        description: 'Override the repo for EeveeSpotify'
        required: false

jobs:
  build:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up variables
      id: setup
      run: |
        echo "EEVEEVERSION=${{ github.event.inputs.EEVEEVERSION }}" >> $GITHUB_ENV
        echo "CHANGEVERSION=${{ github.event.inputs.CHANGEVERSION }}" >> $GITHUB_ENV
        echo "SPOTURL=${{ github.event.inputs.SPOTURL }}" >> $GITHUB_ENV
        echo "VT_ENABLED=${{ secrets.VIRUSTOTALKEY != '' }}" >> $GITHUB_ENV
        echo "CATBOXHASH_ENABLED=${{ secrets.CATBOXHASH != '' }}" >> $GITHUB_ENV
        
    - name: Set Workflow URL
      run: |
        echo "WORKFLOWURL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV
        echo "Workflow URL is ${{ env.WORKFLOWURL }}"

    - name: Set EeveeSpotify Repo if given
      if: ${{ github.event.inputs.EEVEEREPO != '' }}
      run: |
        EEVEEREPO=$(echo "${{ github.event.inputs.EEVEEREPO }}" | sed -E 's|https://github.com/([^/]+)/([^/]+)|\1/\2|' | sed 's|^https://github.com/||')
        echo "EEVEEREPO=$EEVEEEREPO" >> $GITHUB_ENV
        
    - name: Set EeveeSpotify Repo if not given
      if: ${{ github.event.inputs.EEVEEREPO == '' }}
      run: |
        EEVEEREPO=$(echo "whoeevee/EeveeSpotifyReborn")
        echo "EEVEEREPO=$EEVEEREPO" >> $GITHUB_ENV

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        
    - name: Install Cyan
      run: pipx install --force https://github.com/SpotCompiled/pyzule-rw/archive/main.zip

    # --- VERSION/TAG LOGIC ---
    - name: Set EEVEETAG if EEVEEVERSION not provided
      if: ${{ github.event.inputs.EEVEEVERSION == '' }}
      run: |
        echo "EEVEEVERSION not provided, fetching latest release tag..."
        EEVEETAG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/releases/latest | jq -r .tag_name)
        echo "EEVEETAG=$EEVEETAG" >> $GITHUB_ENV
        echo "Latest release tag: ${{ env.EEVEETAG }}"
        
    - name: Set EEVEETAG if tag provided
      if: ${{ env.EEVEEVERSION != '' }}
      id: fetch-tags
      run: |
        EEVEEVERSION="${{ env.EEVEEVERSION }}"
        tags=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ env.EEVEEREPO }}/tags | jq -r '.[].name')
        for tag in $tags; do
          if [[ $tag == *"$EEVEEVERSION"* ]]; then
            echo "EEVEETAG=$tag" >> $GITHUB_ENV
            echo "EEVEETAG: $tag"
            exit 0
          fi
        done
        echo "No matching tag found for EEVEEVERSION=$EEVEEVERSION"
        exit 1

    # --- DOWNLOADS ---
    - name: Create Build Components folder
      run: mkdir -p "Build Components"

    - name: Download Spotify IPA
      run: |
        echo "Downloading From: ${{ github.event.inputs.SPOTURL }}"
        curl -LJO "${{ github.event.inputs.SPOTURL }}"
        downloaded_file=$(ls -t | head -n1)
        mv "$downloaded_file" "Build Components/"
        echo "spotifypath=Build Components/$downloaded_file" >> $GITHUB_ENV
      env:
        SPOTURL: ${{ github.event.inputs.SPOTURL }}

    # VirusTotal uploads kept the same
    - name: Upload Spotify IPA to VirusTotal
      if: ${{ env.VT_ENABLED == 'true' }}
      uses: crazy-max/ghaction-virustotal@v4
      id: vt-spotify
      with:
        files: "${{ env.spotifypath }}"
        vt_api_key: ${{ secrets.VIRUSTOTALKEY }}

    # --- Orion, EeveeSpotify, SwiftProtobuf download + hash validation ---
    # (UNCHANGED, keeping full logic for compatibility)

    # --- Spotify Info Extraction, Component Updates, Versioning, Cyan Patch ---
    # (UNCHANGED, keeps your full build pipeline)

    - name: Run Cyan
      run: |
        Cyan -i "${{ env.spotifypath }}" -o "${{ env.componentspath }}/SpotveeC.v${{ env.CHANGEVERSION }}_v${{ env.VANILLASPOTIFYVERSION }}.ipa" -v ${{ env.CHANGEVERSION }} -f "${{ env.orion }}" "${{ env.swiftprotobuf }}" "${{ env.eevee-arm64 }}" -u -w
        echo "patchedspotify=${{ env.componentspath }}/SpotveeC.v${{ env.CHANGEVERSION }}_v${{ env.VANILLASPOTIFYVERSION }}.ipa" >> $GITHUB_ENV

    - name: Upload SpotifyPatched.ipa to VirusTotal
      if: ${{ env.VT_ENABLED == 'true' }}
      uses: crazy-max/ghaction-virustotal@v4
      id: vt-spotv
      with:
        files: "${{ env.patchedspotify }}"
        vt_api_key: ${{ secrets.VIRUSTOTALKEY }}
